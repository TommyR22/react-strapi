[{"C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\index.js":"1","C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\reportWebVitals.js":"2","C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\App.js":"3","C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\components\\Nav.js":"4","C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\components\\Footer.js":"5","C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\i18n.js":"6","C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\components\\Loader.js":"7","C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\components\\Post.js":"8"},{"size":517,"mtime":1606996286834,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1606993891622,"results":"11","hashOfConfig":"10"},{"size":1770,"mtime":1607340360915,"results":"12","hashOfConfig":"10"},{"size":457,"mtime":1606995234691,"results":"13","hashOfConfig":"10"},{"size":934,"mtime":1606995738104,"results":"14","hashOfConfig":"10"},{"size":1584,"mtime":1601645206536,"results":"15","hashOfConfig":"10"},{"size":869,"mtime":1606996807695,"results":"16","hashOfConfig":"10"},{"size":2328,"mtime":1607340091841,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"bdefw4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\index.js",[],["39","40"],"C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\reportWebVitals.js",[],"C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\App.js",["41","42"],"import './App.scss';\nimport {useEffect, useRef, useState} from \"react\";\nimport {useTranslation} from 'react-i18next';\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport Loader from \"./components/Loader\";\nimport Post from \"./components/Post\";\n\nfunction App() {\n    const {t, i18n} = useTranslation();\n    const [loaderState, setLoader] = useState(false);\n    const [posts, setPosts] = useState([]);\n    let headRef = useRef();\n\n    const goToHead = () => {\n        headRef.current.scrollIntoView({behavior: 'smooth'})\n    };\n\n    useEffect(() => {\n        setLoader(true);\n        fetch(\"http://localhost:1337/posts\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setLoader(false);\n                    setPosts(result);\n                    console.log(result);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                }\n            )\n    }, []);\n\n    return (\n        <div className=\"App\" ref={headRef}>\n            <div style={{position: \"relative\", zIndex: 2, backgroundColor: \"white\"}}>\n                <Nav className=\"nav\"/>\n                {/*<Menu goToAbout={goToAbout} goToGallery={goToGallery} goToContacts={goToContacts}></Menu>*/}\n            </div>\n            <div style={{paddingTop: 100}}>\n                {loaderState && <Loader/>}\n                {!loaderState && posts.map((el, index) => <Post info={el} index={index} value={el} key={el.id}></Post>)}\n            </div>\n\n            <Footer goToHead={goToHead}/>\n        </div>\n    );\n}\n\nexport default App;\n","C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\components\\Nav.js",[],"C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\components\\Footer.js",["43","44"],"import React from 'react';\r\nimport \"./Footer.scss\"\r\nimport {useTranslation} from 'react-i18next';\r\n\r\n\r\nconst Footer = ({goToHead}) => {\r\n    const {t, i18n} = useTranslation();\r\n\r\n    const changeLanguage = () => {\r\n        i18n.changeLanguage(i18n.language === 'it' ? 'en' : 'it');\r\n        goToHead();\r\n    };\r\n\r\n    return (\r\n        <footer>\r\n            <div className=\"footer__item\">\r\n                <img className=\"footer__logo\" src={require('./../assets/images/logo.png').default} alt={\"logo\"}/>\r\n            </div>\r\n            <div className=\"footer__item\">\r\n                <a onClick={() => {\r\n                    goToHead()\r\n                }}>Up</a><br/>\r\n                <img className=\"icon__language\" src={require(`../assets/images/${i18n.language === 'it' ? 'italy' : 'usa'}.png`).default} alt={\"lng\"} onClick={() => changeLanguage()}/>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n",["45","46"],"C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\i18n.js",[],"C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\components\\Loader.js",[],"C:\\Users\\t.ruscica\\workspace\\others\\cms-react\\src\\components\\Post.js",["47","48","49","50","51"],"import React, {useEffect} from 'react';\r\nimport \"./Post.scss\"\r\nimport {faUser, faCalendar, faTags, faClock} from '@fortawesome/free-solid-svg-icons'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Post({info, index}) {\r\n    const urlStrapi = 'http://localhost:1337';\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    function isEven(value) {\r\n        if (value%2 == 0)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    return (\r\n        /*<div className={`post`}>\r\n            <article className=\"card\" role=\"article\">\r\n                <a href=\"#\">\r\n                    <div className=\"card-text\">\r\n                        <div className=\"card-meta\">Architecture</div>\r\n                        <h2 className=\"card-title\">{`${info.Title}`}</h2>\r\n                    </div>\r\n                    <img className=\"card-image\" src={`${urlStrapi}${info.image.url}`}/>\r\n                </a>\r\n            </article>\r\n        </div>*/\r\n        <div className={`blog-card ${!isEven(index) ? \"alt\" : \"\"}`}>\r\n            <div className=\"meta\">\r\n                <div className=\"photo\" style={{backgroundImage: `url(${urlStrapi}${info.image.url}`}}></div>\r\n                <ul className=\"details\">\r\n                    <li><FontAwesomeIcon icon={faUser} className=\"icon\"/><a href=\"#\">{`${info.author}`}</a></li>\r\n                    <li><FontAwesomeIcon icon={faCalendar} className=\"icon\"/>{`${info.published}`}</li>\r\n                    <li>\r\n                        <ul>\r\n                            <FontAwesomeIcon icon={faTags} className=\"icon\"/>\r\n                            <li><a href=\"#\">{`${info.MetaTagTime.MetaTags}`}</a></li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"description\">\r\n                <h1>{`${info.Title}`}</h1>\r\n                {/*<h2>Opening a door to the future</h2>*/}\r\n                <p> {`${info.content}`}</p>\r\n                <p className=\"read-more\">\r\n                    <FontAwesomeIcon icon={faClock} className=\"icon__black\"/><a href=\"#\">{`${info.MetaTagTime.AvgReadTime}`}</a><br></br>\r\n                    Comments: <a href=\"#\">{`${info.comments.length}`}</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;\r\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":10,"column":12,"nodeType":"58","messageId":"59","endLine":10,"endColumn":13},{"ruleId":"56","severity":1,"message":"60","line":10,"column":15,"nodeType":"58","messageId":"59","endLine":10,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":7,"column":12,"nodeType":"58","messageId":"59","endLine":7,"endColumn":13},{"ruleId":"61","severity":1,"message":"62","line":20,"column":17,"nodeType":"63","endLine":22,"endColumn":20},{"ruleId":"52","replacedBy":"64"},{"ruleId":"54","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":14,"column":21,"nodeType":"68","messageId":"69","endLine":14,"endColumn":23},{"ruleId":"61","severity":1,"message":"70","line":36,"column":74,"nodeType":"63","endLine":36,"endColumn":86},{"ruleId":"61","severity":1,"message":"70","line":41,"column":33,"nodeType":"63","endLine":41,"endColumn":45},{"ruleId":"61","severity":1,"message":"70","line":51,"column":78,"nodeType":"63","endLine":51,"endColumn":90},{"ruleId":"61","severity":1,"message":"70","line":52,"column":31,"nodeType":"63","endLine":52,"endColumn":43},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'t' is assigned a value but never used.","Identifier","unusedVar","'i18n' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["71"],["72"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]